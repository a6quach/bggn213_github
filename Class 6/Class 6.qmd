---
title: "Class 06: R Functions"
author: "Andrew Quach (A12137777)"
format: pdf
---

## All about functions in R

Every function in R has at least 3 things:
- name(you pck it)
- arguments (the input(s) to your function), and
- the body.

Today we will write a function to grade a class of student assignment scores(e.g. homeworks, etc).

First I will work with a simplified vector input where I know what the answer should be.

```{r}
# Example input vectors to start with
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)
```

```{r}
mean(student1)
```

# How can we drop the lowest score? I can use the `min()` function to find the lowest score (element in the vector).

```{r}
min(student1)
```

I found the function `which.mni()`

```{r}
student1
which.min(student1)
```

```{r}
student1[ -8 ]
```

```{r}
mean(student1[-which.min(student1)])
```

```{r}
mean(student2, na.rm=TRUE)
```

We can "mask" the NA or change them to be zero. The rational here is if you dont do hw you get zero pts.

We can use the `is.na()` function to find where the missing homeworks are in the input vector.

```{r}
is.na(student2)
```

```{r}
student2[ is.na(student2)] <- 0
student2
```


```{r}
# Mask NA to zero
x <- student3
x[ is.na(x)] <- 0
# Find the mean dropping the lowest score
mean( x[-which.min(x)])
```

Turn this snippet into a function.

```{r}
grade <- function(x) {
  #Mask NA to zero
  x[ is.na(x)] <- 0
  # Find the mean dropping the lowest score
  mean( x[-which.min(x)])
}
```


We can use this function now to grade any student

```{r}
grade(student1)
```

```{r}
grade(student2)
```

```{r}
grade(student3)
```

> Write a function grade() to determine an overall grade from a vector of student homework
assignment scores dropping the lowest single score. If a student misses a homework (i.e. has an
NA value) this can be used as a score to be potentially dropped. Your final function should be
adquately explained with code comments and be able to work on an example class gradebook
such as this one in CSV format: “https://tinyurl.com/gradeinput”

I need to read the gradebook CSV file

```{r}
gradebook <- read.csv("https://tinyurl.com/gradeinput", row.names = 1)
gradebook
```

A very useful function that Barry is forcng us to use here is the `apply()` function. How do we use it to take our new `grade()` funciton and apply it over the full gradebook.

```{r}
ans <- apply(gradebook, 1, grade)
ans
```

>Q2. Using your grade() function and the supplied gradebook, Who is the top scoring student
overall in the gradebook? [3pts]

```{r}
which.max(ans)
```

>Q3. From your analysis of the gradebook, which homework was toughest on students (i.e. obtained
the lowest scores overall? [2pts]

We are going to use the `apply()` function again here...

```{r}
which.min(apply(gradebook, 2, mean, na.rm=TRUE))
```

Let's mask the NA values to zero

```{r}
mask <- gradebook
mask[ is.na(mask) ] <- 0
mask
```


```{r}
which.min( apply(mask, 2, mean) )
```


```{r}
which.min(apply(mask, 2, sum))
```

>Q4. Optional Extension: From your analysis of the gradebook, which homework was most
predictive of overall score (i.e. highest correlation with average grade score)? [1pt]

```{r}
cor(mask$hw2, ans)
```

```{r}
cor(mask$hw5, ans)
```


Now take the `apply()` function and the `cor()` function and run over our whole gradebook.

```{r}
which.max( apply(mask, 2, cor, y=ans))
```

